import math

def reward_function(params):
    if params['is_offtrack'] or params['is_crashed']:
        return 1e-9
    waypoints = params['waypoints']
    closest_waypoints = params['closest_waypoints']    
    best_angles=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 7.0, 14.0, 17.0, 5.0, -1.0, 0.0, 0.0, 11.0, 25.0, 30.0, 30.0, 20.0, 0.0, -1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 4.0, -6.0, 19.0, 11.0, -3.0, 30.0, 22.0, 21.0, 18.0, 14.0, 13.0, 10.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 12.0, 23.0, 14.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 14.0, 30.0, 18.0, 6.0, 10.0, 14.0, 23.0, 30.0, 30.0, 30.0, 30.0, 28.0, 12.0, 8.0, 7.0, 4.0, 4.0, 5.0, 0.0, 4.0, 7.0, 0.0, 0.0, 8.0, 5.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -25.0, -30.0, -30.0, -30.0, -20.0, -1.0, -0.0, -0.0, -2.0, 5.0, -10.0, -30.0, -30.0, -16.0, -2.0, 0.0, -1.0, 0.0, -5.0, -18.0, -21.0, -25.0, -29.0, -30.0, -25.0, -4.0, 0.0, -2.0, -1.0, -2.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 15.0, 23.0, 25.0, 25.0, 30.0, 29.0, 18.0, 22.0, 30.0, 30.0, 30.0, 11.0, -2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
    # Calculate the direction of the center line based on the closest waypoints
    waypoints_length= len(waypoints)
    return 100/(1+abs(params['steering_angle']-best_angles[(closest_waypoints[1])%waypoints_length]))